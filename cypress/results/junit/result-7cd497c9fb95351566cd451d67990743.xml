<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="43.7220" tests="5" failures="2">
  <testsuite name="Root Suite" timestamp="2021-12-03T12:07:11" tests="0" file="cypress/integration/End2EndTest.spec.js" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case - 1" timestamp="2021-12-03T12:07:11" tests="1" time="8.3710" failures="0">
    <testcase name="Test Case - 1 Testing Menu" time="8.4110" classname="Testing Menu">
    </testcase>
  </testsuite>
  <testsuite name="Test Case - 2" timestamp="2021-12-03T12:07:19" tests="1" time="27.9000" failures="0">
    <testcase name="Test Case - 2 Testing Body" time="27.7300" classname="Testing Body">
    </testcase>
  </testsuite>
  <testsuite name="Test Case - 3, Mocking Network Response " timestamp="2021-12-03T12:07:47" tests="1" time="1.5200" failures="0">
    <testcase name="Test Case - 3, Mocking Network Response  Mocking Network Response" time="1.5390" classname="Mocking Network Response">
    </testcase>
  </testsuite>
  <testsuite name="Testing API Endpoints" timestamp="2021-12-03T12:07:49" tests="1" time="0.9550" failures="1">
    <testcase name="Testing API Endpoints Test Get Request" time="0.0000" classname="Test Get Request">
      <failure message="`cy.request()` failed on:

http://localhost/cci-backend/intent

The response we received from your web server was:

  &gt; 400: Bad Request

This was considered a failure because the status code was not `2xx` or `3xx`.

If you do not want status codes to cause failures pass the option: `failOnStatusCode: false`

-----------------------------------------------------------

The request we sent was:

Method: POST
URL: http://localhost/cci-backend/intent
Headers: {
  &quot;Connection&quot;: &quot;keep-alive&quot;,
  &quot;user-agent&quot;: &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/8.5.0 Chrome/91.0.4472.164 Electron/13.2.0 Safari/537.36&quot;,
  &quot;accept&quot;: &quot;*/*&quot;,
  &quot;accept-encoding&quot;: &quot;gzip, deflate&quot;,
  &quot;content-type&quot;: &quot;application/json&quot;,
  &quot;content-length&quot;: 43
}
Body: {&quot;id&quot;:3,&quot;name&quot;:&quot;Example3&quot;,&quot;description&quot;:&quot;&quot;}

-----------------------------------------------------------

The response we got was:

Status: 400 - Bad Request
Headers: {
  &quot;server&quot;: &quot;nginx/1.21.1&quot;,
  &quot;date&quot;: &quot;Fri, 03 Dec 2021 12:07:49 GMT&quot;,
  &quot;content-type&quot;: &quot;application/json&quot;,
  &quot;transfer-encoding&quot;: &quot;chunked&quot;,
  &quot;connection&quot;: &quot;keep-alive&quot;,
  &quot;access-control-allow-headers&quot;: &quot;Content-Type&quot;,
  &quot;access-control-allow-methods&quot;: &quot;GET, POST, DELETE, PUT, OPTIONS&quot;
}
Body: {
  &quot;message&quot;: &quot;An Intent with the given name already exists.&quot;,
  &quot;details&quot;: [
    &quot;duplicate.item&quot;
  ]
}


https://on.cypress.io/request" type="CypressError"><![CDATA[CypressError: `cy.request()` failed on:

http://localhost/cci-backend/intent

The response we received from your web server was:

  > 400: Bad Request

This was considered a failure because the status code was not `2xx` or `3xx`.

If you do not want status codes to cause failures pass the option: `failOnStatusCode: false`

-----------------------------------------------------------

The request we sent was:

Method: POST
URL: http://localhost/cci-backend/intent
Headers: {
  "Connection": "keep-alive",
  "user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/8.5.0 Chrome/91.0.4472.164 Electron/13.2.0 Safari/537.36",
  "accept": "*/*",
  "accept-encoding": "gzip, deflate",
  "content-type": "application/json",
  "content-length": 43
}
Body: {"id":3,"name":"Example3","description":""}

-----------------------------------------------------------

The response we got was:

Status: 400 - Bad Request
Headers: {
  "server": "nginx/1.21.1",
  "date": "Fri, 03 Dec 2021 12:07:49 GMT",
  "content-type": "application/json",
  "transfer-encoding": "chunked",
  "connection": "keep-alive",
  "access-control-allow-headers": "Content-Type",
  "access-control-allow-methods": "GET, POST, DELETE, PUT, OPTIONS"
}
Body: {
  "message": "An Intent with the given name already exists.",
  "details": [
    "duplicate.item"
  ]
}


https://on.cypress.io/request
    at http://localhost/__cypress/runner/cypress_runner.js:157302:80
    at tryCatcher (http://localhost/__cypress/runner/cypress_runner.js:13212:23)
    at Promise._settlePromiseFromHandler (http://localhost/__cypress/runner/cypress_runner.js:11147:31)
    at Promise._settlePromise (http://localhost/__cypress/runner/cypress_runner.js:11204:18)
    at Promise._settlePromise0 (http://localhost/__cypress/runner/cypress_runner.js:11249:10)
    at Promise._settlePromises (http://localhost/__cypress/runner/cypress_runner.js:11329:18)
    at _drainQueueStep (http://localhost/__cypress/runner/cypress_runner.js:7919:12)
    at _drainQueue (http://localhost/__cypress/runner/cypress_runner.js:7912:9)
    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost/__cypress/runner/cypress_runner.js:7928:5)
    at Async.drainQueues (http://localhost/__cypress/runner/cypress_runner.js:7798:14)
From Your Spec Code:
    at Context.eval (http://localhost/__cypress/tests?p=cypress/integration/End2EndTest.spec.js:7502:7)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Backend Testing" timestamp="2021-12-03T12:07:50" tests="1" time="4.8790" failures="1">
    <testcase name="Backend Testing Get Request" time="0.0000" classname="Get Request">
      <failure message="Timed out retrying after 4000ms: expected [ Array(8) ] to have a length of 7 but got 8" type="AssertionError"><![CDATA[AssertionError: Timed out retrying after 4000ms: expected [ Array(8) ] to have a length of 7 but got 8
    at frontEnd.backEndTesting (http://localhost/__cypress/tests?p=cypress/integration/End2EndTest.spec.js:7561:51)
    at Context.eval (http://localhost/__cypress/tests?p=cypress/integration/End2EndTest.spec.js:7356:34)]]></failure>
    </testcase>
  </testsuite>
</testsuites>