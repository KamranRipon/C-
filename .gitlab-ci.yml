stages:
  - restart_test_environment
  - test

variables:
  http_proxy: "http://10.61.16.6:3128"
  https_proxy: "http://10.61.16.6:3128"
  no_proxy: "git.dataport.de,10.61.135.11,sonarqube.dataport.de,127.0.0.1,minio.gitlab-runner-minio.svc.cluster.local,al.s3.dataport.de,docker:2375,docker:2376,artifactory-extern.dataport.de,localhost:80"
  ARTIFACT_ROOT: "dchatbot-docker-development.artifactory-extern.dataport.de"

restart test environment:
  image: docker.artifactory-extern.dataport.de/debian:11-slim
  stage: restart_test_environment
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEV_VM_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh
      -o UserKnownHostsFile=/dev/null
      -o StrictHostKeyChecking=no
      $DEV_VM_SSH_USER@$DEV_VM_IP
      "
      cd /home/redakt/deployment_e2e ;
      docker-compose down ;
      docker login -u $CONPLAT_ARTIFACTORY_USER -p $CONPLAT_ARTIFACTORY_PASS $ARTIFACT_ROOT ;
      docker-compose pull ;
      docker-compose up -d ;
      exit
      "
    - exit
  only:
    - main
    - web
    - schedules

testJob:
  image: docker.artifactory-extern.dataport.de/cypress/browsers:node16.14.0-slim-chrome99-ff97
  stage: test
  before_script:
    - npm install cypress
    - npm ci
  script:
    # you can use :chrome or :firefox
    - npm run ci-test:chrome || FAILED=true
    - npm run merge
    - npm run generateMocha_Report
    # evaluate the status of the tests
    - if [ $FAILED ]; then exit 1; fi
  artifacts:
    when: always
    paths:
      - cypress/results/junit/*.xml
      - cypress/results/mochawesome/output.json
      - cypress/screenshots/*
      - ./output.html
    reports:
      junit: cypress/results/junit/result-*.xml
    expire_in: 1 week
  # only:
  #   - main
  #   - web
  #   - schedules
